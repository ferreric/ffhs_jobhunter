plugins {
    id 'java'
    id 'war'
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'com.palantir.docker' version '0.36.0' // Docker Plugin
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = 17
    targetCompatibility = 17
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

war {
    enabled = true
}

docker {
    name "${project.group}/${project.name}:${project.version}"
    files tasks.war.archiveFile
    buildArgs(['JAR_FILE': tasks.war.archiveFileName.get()])
}

springBoot {
    buildInfo()
}

test {
    useJUnitPlatform()
}