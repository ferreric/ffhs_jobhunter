services:
  postgres:
    image: postgres:16-alpine
    container_name: postgres
    environment:
      POSTGRES_DB: jobhunter
      POSTGRES_USER: jobhunter
      POSTGRES_PASSWORD: hunterpw
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d
    ports:
      - "5678:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U jobhunter"]
      interval: 10s
      timeout: 5s
      retries: 5

  springboot:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - gradle-cache:/gradle  # Bind the gradle-cache volume to /gradle
    container_name: springboot
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/jobhunter
      SPRING_DATASOURCE_USERNAME: jobhunter
      SPRING_DATASOURCE_PASSWORD: hunterpw
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_DATABASE-PLATFORM: org.hibernate.dialect.PostgreSQLDialect
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8989:8080"

volumes:
  postgres_data:
  gradle-cache: